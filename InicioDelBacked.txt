EL primary key en mondo es Object ID y lo da mongo en automatico


se instala express cors dotenv y mongoose 

npm i -D @types/cors @types/express nodemon typescript ts-node

npx tsc --init //CREA EL tsconfig

descomentamos 30 (y quitamos el 10 a node), 86, 60 (queda como  "outDir": "./build"), 
la 29 (queda como   "rootDir": "./src",), la 18, se agrega en la 2da   "exlude":["node_modules"],
la 18, antes 17, la descomentamos. De nuevo en la 3,
 agregamos   "include":["index.d.ts", "src/**/*.ts"],
En la ahora linea 8, descomentamos incremental e isolatedModules y el noEmit, que ahora esta en la 60, en la 45 el resolveJsonModule

En package.json, el apartado de scripts debe de tener :
   "dev": "nodemon --watch src src/index.ts",
    "start": "tsc && node build/index.js"

y se elimina el test


Creamos app.ts que debe llevar 
import express, { Application, Response, Request } from "express";
import cors from "cors";


const app:Application = express();

app.use(cors());

app.use(express.json())
app.use(express.urlencoded({extended: true}))

app.get("/", (_req: Request,res: Response)=>{
    res.send("Hola desde mi servidor con TS")

})


export default app;

y NOTOTA, variable que no se use dene llevar guion bajo al inicio _


Creamos el index.ts que lleva
import app from "./app";
import mongoose from "mongoose";

async function main(){
    try {
        await mongoose.connect(
            "mongodb://127.0.0.1:27017/QUTMA"
        );
        console.log('Aplicacion corriendo con exito');
        app.listen(4000, ()=>{
            console.log("Aplicacion corriendo con exito")
        })
    } catch (error) {
        console.log("Algo salio mal con la base de datos")
    }


}
main();
